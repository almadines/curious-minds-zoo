{"version":3,"sources":["webpack:///./src/components/lists/staff-list.tsx","webpack:///./src/pages/staff.tsx"],"names":["StaffListPage","props","getListElementWrapper","memoize","staff","listElems","Array","from","values","map","StaffListElement","staffId","id","navigate","StaffListWrapper","state","createFormOpen","mapStateToProps","setCreateFormOpenState","newState","this","setState","render","staffListWrapper","createFormContents","className","editorTemplate","Staff","getNewEditorTemplate","editMode","onCancelCallback","bind","onSuccessCallback","title","onClick","listElementWrapper","includeSearchFilter","tableMode","React","ConnectedStaffListPage","connect","StaffPage","linkDetailPages"],"mappings":"8SAyBMA,E,oBAoBJ,WAAYC,GAA2B,aACrC,cAAMA,IAAN,MAjBKC,sBAAwBC,aAC7B,SAACC,GACC,IAKMC,EAAYC,MAAMC,KAAKH,EAAMI,UAAUC,KAC3C,SAACL,GAAD,OACE,IAAIM,IAAiBN,GANvBO,EAMyDP,EAAMQ,GAL9C,WACjBC,mBAAS,qBAAqBF,MAHG,IACjCA,KAQF,OAAO,IAAIG,IAAiBT,KAXM,KAkBpC,EAAKU,MAAQ,CAAEC,gBAAgB,GAFM,E,yFAKzBC,gBAAd,SAA8BF,GAC5B,MAAO,CACLX,MAAOW,EAAMX,Q,2BAIVc,uBAAP,SAA8BC,GAC5BC,KAAKC,SAAS,CAAEL,eAAgBG,K,EAG3BG,OAAP,WACE,IAAMC,EAAmBH,KAAKlB,sBAAsBkB,KAAKnB,MAAMG,OAEzDoB,EAAuBJ,KAAKL,MAAMC,eACtC,uBAAKS,UAAU,uCACb,gBAAC,IAAD,CACEC,eAAgBC,IAAMC,uBACtBC,UAAU,EACVC,iBAAkBV,KAAKF,uBAAuBa,KAAKX,MAAM,GACzDY,kBAAmBZ,KAAKF,uBAAuBa,KAAKX,MAAM,GAC1Da,MAAM,oBAIV,0BACER,UAAU,8CACVS,QAASd,KAAKF,uBAAuBa,KAAKX,MAAM,IAFlD,kBAQF,OACE,uBAAKK,UAAU,yBACb,uBACEA,UAAS,sCACPL,KAAKL,MAAMC,eACP,mBACA,uBAGLQ,GAEH,uBAAKC,UAAU,iCACb,gBAAC,IAAD,CACEU,mBAAoBZ,EACpBa,qBAAqB,EACrBC,WAAW,O,GAxEKC,iBAmFbC,EAHgBC,kBAAQxC,EAAciB,gBAAtBuB,CAC7BxC,G,ICtGIyC,E,gLACJnB,OAAA,WACE,OACE,gBAAC,IAAD,CAAQW,MAAM,UACZ,gBAAC,EAAD,CAAwBS,iBAAiB,M,GAJzBJ,aAUTG","file":"component---src-pages-staff-tsx-34393b1ec02989e8378e.js","sourcesContent":["import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport memoize from \"memoize-one\";\r\nimport { AppState } from \"../../global/state/state\";\r\nimport ListDisplay from \"./list-display\";\r\nimport {\r\n  StaffListElement,\r\n  ListElementWrapper,\r\n  StaffListWrapper,\r\n} from \"global/types/list-element\";\r\nimport { isEqual } from \"lodash\";\r\nimport { Staff } from \"global/types/staff\";\r\nimport { navigate } from \"@reach/router\";\r\nimport \"./instance-list-styles.scss\";\r\nimport ConnectedEditPage from \"components/edit-page/edit-page\";\r\n\r\ninterface StaffListPageProps {\r\n  staff?: Map<string, Staff>;\r\n  linkDetailPages?: boolean;\r\n}\r\n\r\ninterface ExhibitsListPageState {\r\n  createFormOpen: boolean;\r\n}\r\n\r\nclass StaffListPage extends React.PureComponent<\r\n  StaffListPageProps,\r\n  ExhibitsListPageState\r\n> {\r\n  public getListElementWrapper = memoize(\r\n    (staff: Map<string, Staff>): ListElementWrapper => {\r\n      const onClickCallbackConstructor = (\r\n        staffId: string\r\n      ): (() => void) => () => {\r\n        navigate(`/staff-details?id=${staffId}`);\r\n      };\r\n      const listElems = Array.from(staff.values()).map(\r\n        (staff: Staff): StaffListElement =>\r\n          new StaffListElement(staff, onClickCallbackConstructor(staff.id))\r\n      );\r\n      return new StaffListWrapper(listElems);\r\n    },\r\n    isEqual\r\n  );\r\n\r\n  constructor(props: StaffListPageProps) {\r\n    super(props);\r\n    this.state = { createFormOpen: false };\r\n  }\r\n\r\n  public static mapStateToProps(state: AppState): any {\r\n    return {\r\n      staff: state.staff,\r\n    };\r\n  }\r\n\r\n  public setCreateFormOpenState(newState: boolean): void {\r\n    this.setState({ createFormOpen: newState });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const staffListWrapper = this.getListElementWrapper(this.props.staff);\r\n\r\n    const createFormContents = !!this.state.createFormOpen ? (\r\n      <div className=\"instance-list-create-form-container\">\r\n        <ConnectedEditPage\r\n          editorTemplate={Staff.getNewEditorTemplate()}\r\n          editMode={true}\r\n          onCancelCallback={this.setCreateFormOpenState.bind(this, false)}\r\n          onSuccessCallback={this.setCreateFormOpenState.bind(this, false)}\r\n          title=\"Register Staff\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <button\r\n        className=\"btn btn-success instance-list-create-button\"\r\n        onClick={this.setCreateFormOpenState.bind(this, true)}\r\n      >\r\n        Register Staff\r\n      </button>\r\n    );\r\n\r\n    return (\r\n      <div className=\"instance-list-wrapper\">\r\n        <div\r\n          className={`instance-list-create-form-wrapper ${\r\n            this.state.createFormOpen\r\n              ? \"create-form-open\"\r\n              : \"create-form-closed\"\r\n          }`}\r\n        >\r\n          {createFormContents}\r\n        </div>\r\n        <div className=\"instance-list-content-wrapper\">\r\n          <ListDisplay\r\n            listElementWrapper={staffListWrapper}\r\n            includeSearchFilter={true}\r\n            tableMode={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ConnectedStaffListPage = connect(StaffListPage.mapStateToProps)(\r\n  StaffListPage\r\n);\r\nexport default ConnectedStaffListPage;\r\n","import * as React from \"react\";\r\nimport { Layout } from \"../components/layout/layout\";\r\nimport ConnectedStaffListPage from \"components/lists/staff-list\";\r\n\r\nclass StaffPage extends React.Component {\r\n  render(): JSX.Element {\r\n    return (\r\n      <Layout title=\"Staff:\">\r\n        <ConnectedStaffListPage linkDetailPages={true} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaffPage;\r\n"],"sourceRoot":""}